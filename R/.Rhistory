TwoAssetCorrelationOption <-
function(s1, K, s2, X, r, b1, b2,v1, v2, rho, t, type){
#These options can be priced using the formulas of Zhang (1995a):
#input:
#s1 = underlying price of the first asset
#K = strike of the option
#s2 = underlying price of the second asset
#X = payout level
#r = risk free rate
#b1 = cost of carrying asset of first asset
#b2 = cost of carrying asset of second asset
#v1 = volatility first asset
#v2 = volatility second asset
#rho = correlations between asset 1 and asset 2
#t = time to maturity of the option
#type = call "C" or put "P"
#output: price of TWO-ASSET CORRELATION OPTIONS
#pbinorm fucntion taken by package 'VGAM'
pbinorm <- function(q1, q2, mean1 = 0, mean2 = 0, var1 = 1, var2 = 1, cov12){
sd1 <- sqrt(var1)
sd2 <- sqrt(var2)
rho <- cov12/(sd1 * sd2)
if (anyNA(q1) || anyNA(q2) || anyNA(sd1) || anyNA(sd2) ||
anyNA(mean1) || anyNA(mean2) || anyNA(rho))
stop("no NAs allowed in arguments or variables 'q1', 'q2',",
" 'mean1', 'mean2', 'sd1', 'sd2', 'cov12'")
if (min(rho) < -1 || max(rho) > +1)
stop("correlation 'rho' is out of range")
if (length(mean1) > 1 && length(mean2) == 1 && length(var1) ==
1 && length(var2) == 1 && length(cov12) == 1)
warning("the call to pnorm2() seems based on the old version ",
"of the arguments")
LLL <- max(length(q1), length(q2), length(mean1), length(mean2),
length(sd1), length(sd2), length(rho))
if (length(q1) != LLL)
q1 <- rep_len(q1, LLL)
if (length(q2) != LLL)
q2 <- rep_len(q2, LLL)
if (length(mean1) != LLL)
mean1 <- rep_len(mean1, LLL)
if (length(mean2) != LLL)
mean2 <- rep_len(mean2, LLL)
if (length(sd1) != LLL)
sd1 <- rep_len(sd1, LLL)
if (length(sd2) != LLL)
sd2 <- rep_len(sd2, LLL)
if (length(rho) != LLL)
rho <- rep_len(rho, LLL)
Zedd1 <- Z1 <- (q1 - mean1)/sd1
Zedd2 <- Z2 <- (q2 - mean2)/sd2
is.inf1.neg <- is.infinite(Z1) & Z1 < 0
is.inf1.pos <- is.infinite(Z1) & Z1 > 0
is.inf2.neg <- is.infinite(Z2) & Z2 < 0
is.inf2.pos <- is.infinite(Z2) & Z2 > 0
Zedd1[is.inf1.neg] <- 0
Zedd1[is.inf1.pos] <- 0
Zedd2[is.inf2.neg] <- 0
Zedd2[is.inf2.pos] <- 0
ans <- Zedd1
singler <- ifelse(length(rho) == 1, 1, 0)
answer <- .C("pnorm2ccc", ah = as.double(-Zedd1), ak = as.double(-Zedd2),
r = as.double(rho), size = as.integer(LLL), singler = as.integer(singler),
ans = as.double(ans))$ans
if (any(answer < 0))
warning("some negative values returned")
answer[is.inf1.neg] <- 0
answer[is.inf1.pos] <- pnorm(Z2[is.inf1.pos])
answer[is.inf2.neg] <- 0
answer[is.inf2.pos] <- pnorm(Z1[is.inf2.pos])
answer
}
y1 <- (log(s1/K) + (b1 - v1^(2)/2)*t)/(v1*sqrt(t))
y2 <- (log(s2/X) + (b2 - v2^(2)/2)*t)/(v2*sqrt(t))
if(type == "C"){
price <- s2 * exp((b2-r)*t)*pbinorm(q1 = y1 + rho*v2*sqrt(t) , q2 = y2 + v2*sqrt(t) ,cov12 = rho) -
X*exp(-r*t)*pbinorm(q1 = y1 , q2 = y2 ,cov12 = rho)
}
if(type == "P"){
price <- X*exp(-r*t)*pbinorm(q1 = -y1 , q2 = -y2 ,cov12 = rho)- s2 * exp((b2-r)*t)*
pbinorm(q1 = -y1 - rho*v2*sqrt(t) , q2 = -y2 - v2*sqrt(t) ,cov12 = rho)
}
return(round(price,2))
}
TwoAssetCorrelationOption(52,50,65,70,0.1,0.1,0.1,0.2,0.3,.75,0.5,"C")
TwoAssetCorrelationOption <-
function(s1, K, s2, X, r, b1, b2,v1, v2, rho, t, type){
#These options can be priced using the formulas of Zhang (1995a):
#input:
#s1 = underlying price of the first asset
#K = strike of the option
#s2 = underlying price of the second asset
#X = payout level
#r = risk free rate
#b1 = cost of carrying asset of first asset
#b2 = cost of carrying asset of second asset
#v1 = volatility first asset
#v2 = volatility second asset
#rho = correlations between asset 1 and asset 2
#t = time to maturity of the option
#type = call "C" or put "P"
#output: price of TWO-ASSET CORRELATION OPTIONS
#pbinorm fucntion taken by package 'VGAM'
pbinorm <- function(q1, q2, mean1 = 0, mean2 = 0, var1 = 1, var2 = 1, cov12){
sd1 <- sqrt(var1)
sd2 <- sqrt(var2)
rho <- cov12/(sd1 * sd2)
if (anyNA(q1) || anyNA(q2) || anyNA(sd1) || anyNA(sd2) ||
anyNA(mean1) || anyNA(mean2) || anyNA(rho))
stop("no NAs allowed in arguments or variables 'q1', 'q2',",
" 'mean1', 'mean2', 'sd1', 'sd2', 'cov12'")
if (min(rho) < -1 || max(rho) > +1)
stop("correlation 'rho' is out of range")
if (length(mean1) > 1 && length(mean2) == 1 && length(var1) ==
1 && length(var2) == 1 && length(cov12) == 1)
warning("the call to pnorm2() seems based on the old version ",
"of the arguments")
LLL <- max(length(q1), length(q2), length(mean1), length(mean2),
length(sd1), length(sd2), length(rho))
if (length(q1) != LLL)
q1 <- rep_len(q1, LLL)
if (length(q2) != LLL)
q2 <- rep_len(q2, LLL)
if (length(mean1) != LLL)
mean1 <- rep_len(mean1, LLL)
if (length(mean2) != LLL)
mean2 <- rep_len(mean2, LLL)
if (length(sd1) != LLL)
sd1 <- rep_len(sd1, LLL)
if (length(sd2) != LLL)
sd2 <- rep_len(sd2, LLL)
if (length(rho) != LLL)
rho <- rep_len(rho, LLL)
Zedd1 <- Z1 <- (q1 - mean1)/sd1
Zedd2 <- Z2 <- (q2 - mean2)/sd2
is.inf1.neg <- is.infinite(Z1) & Z1 < 0
is.inf1.pos <- is.infinite(Z1) & Z1 > 0
is.inf2.neg <- is.infinite(Z2) & Z2 < 0
is.inf2.pos <- is.infinite(Z2) & Z2 > 0
Zedd1[is.inf1.neg] <- 0
Zedd1[is.inf1.pos] <- 0
Zedd2[is.inf2.neg] <- 0
Zedd2[is.inf2.pos] <- 0
ans <- Zedd1
singler <- ifelse(length(rho) == 1, 1, 0)
answer <- .C(pnorm2ccc, ah = as.double(-Zedd1), ak = as.double(-Zedd2),
r = as.double(rho), size = as.integer(LLL), singler = as.integer(singler),
ans = as.double(ans))$ans
if (any(answer < 0))
warning("some negative values returned")
answer[is.inf1.neg] <- 0
answer[is.inf1.pos] <- pnorm(Z2[is.inf1.pos])
answer[is.inf2.neg] <- 0
answer[is.inf2.pos] <- pnorm(Z1[is.inf2.pos])
answer
}
y1 <- (log(s1/K) + (b1 - v1^(2)/2)*t)/(v1*sqrt(t))
y2 <- (log(s2/X) + (b2 - v2^(2)/2)*t)/(v2*sqrt(t))
if(type == "C"){
price <- s2 * exp((b2-r)*t)*pbinorm(q1 = y1 + rho*v2*sqrt(t) , q2 = y2 + v2*sqrt(t) ,cov12 = rho) -
X*exp(-r*t)*pbinorm(q1 = y1 , q2 = y2 ,cov12 = rho)
}
if(type == "P"){
price <- X*exp(-r*t)*pbinorm(q1 = -y1 , q2 = -y2 ,cov12 = rho)- s2 * exp((b2-r)*t)*
pbinorm(q1 = -y1 - rho*v2*sqrt(t) , q2 = -y2 - v2*sqrt(t) ,cov12 = rho)
}
return(round(price,2))
}
TwoAssetCorrelationOption(52,50,65,70,0.1,0.1,0.1,0.2,0.3,.75,0.5,"C")
install.packages(‘pbivnorm’)
install.packages("pbivnorm")
install.packages("Rtools")
View(‘pbivnorm’)
View(pbivnorm)
library(pbivnorm)
View(pbivnorm)
detach("package:pbivnorm", unload = TRUE)
remove.packages("pbivnorm")
TwoAssetCorrelationOption <-
function(s1, K, s2, X, r, b1, b2,v1, v2, rho, t, type){
#These options can be priced using the formulas of Zhang (1995a):
#input:
#s1 = underlying price of the first asset
#K = strike of the option
#s2 = underlying price of the second asset
#X = payout level
#r = risk free rate
#b1 = cost of carrying asset of first asset
#b2 = cost of carrying asset of second asset
#v1 = volatility first asset
#v2 = volatility second asset
#rho = correlations between asset 1 and asset 2
#t = time to maturity of the option
#type = call "C" or put "P"
#output: price of TWO-ASSET CORRELATION OPTIONS
pbinorm <- function (q1, q2, cov12 = 0, recycle = TRUE)
{
if (length(dim(q1))) {
if (ncol(q1) != 2)
stop("'q1' must have two columns if specified as a matrix")
if (!missing(q2) && !is.null(q2))
warning("'q1' was specified as a matrix, so 'q2' will be ignored")
q2 <- q1[, 2]
q1 <- q1[, 1]
}
if (any(abs(cov12) > 1))
stop("'cov12' must be a valid correlation (-1 <= cov12 <= 1)")
q1 <- replace(q1, q1 == Inf, .Machine$double.xmax)
q1 <- replace(q1, q1 == -Inf, -.Machine$double.xmax)
q2 <- replace(q2, q2 == Inf, .Machine$double.xmax)
q2 <- replace(q2, q2 == -Inf, -.Machine$double.xmax)
lengths <- sapply(list(q1, q2, cov12), length)
if (recycle) {
q1 <- rep(q1, length.out = max(lengths))
q2 <- rep(q2, length.out = max(lengths))
cov12 <- rep(cov12, length.out = max(lengths))
}
else if (diff(range(lengths)) > 0) {
stop("'q1', 'q2', and 'cov12' must be the same length when recycling is disallowed")
}
lower <- as.double(c(0, 0))
infin <- as.integer(c(0, 0))
uppera <- as.double(q1)
upperb <- as.double(q2)
lt <- as.integer(length(q1))
prob <- double(lt)
cov12 <- as.double(cov12)
ans <- .Fortran("PBIVNORM", prob, lower, uppera, upperb,
infin, cov12, lt, PACKAGE = "pbivnorm")[[1]]
return(ans)
}
y1 <- (log(s1/K) + (b1 - v1^(2)/2)*t)/(v1*sqrt(t))
y2 <- (log(s2/X) + (b2 - v2^(2)/2)*t)/(v2*sqrt(t))
if(type == "C"){
price <- s2 * exp((b2-r)*t)*pbinorm(q1 = y1 + rho*v2*sqrt(t) , q2 = y2 + v2*sqrt(t) ,cov12 = rho) -
X*exp(-r*t)*pbinorm(q1 = y1 , q2 = y2 ,cov12 = rho)
}
if(type == "P"){
price <- X*exp(-r*t)*pbinorm(q1 = -y1 , q2 = -y2 ,cov12 = rho)- s2 * exp((b2-r)*t)*
pbinorm(q1 = -y1 - rho*v2*sqrt(t) , q2 = -y2 - v2*sqrt(t) ,cov12 = rho)
}
return(round(price,2))
}
TwoAssetCorrelationOption(52,50,65,70,0.1,0.1,0.1,0.2,0.3,.75,0.5,"C")
TwoAssetCorrelationOption <-
function(s1, K, s2, X, r, b1, b2,v1, v2, rho, t, type){
#These options can be priced using the formulas of Zhang (1995a):
#input:
#s1 = underlying price of the first asset
#K = strike of the option
#s2 = underlying price of the second asset
#X = payout level
#r = risk free rate
#b1 = cost of carrying asset of first asset
#b2 = cost of carrying asset of second asset
#v1 = volatility first asset
#v2 = volatility second asset
#rho = correlations between asset 1 and asset 2
#t = time to maturity of the option
#type = call "C" or put "P"
#output: price of TWO-ASSET CORRELATION OPTIONS
pbinorm <- function (q1, q2, cov12 = 0, recycle = TRUE)
{
if (length(dim(q1))) {
if (ncol(q1) != 2)
stop("'q1' must have two columns if specified as a matrix")
if (!missing(q2) && !is.null(q2))
warning("'q1' was specified as a matrix, so 'q2' will be ignored")
q2 <- q1[, 2]
q1 <- q1[, 1]
}
if (any(abs(cov12) > 1))
stop("'cov12' must be a valid correlation (-1 <= cov12 <= 1)")
q1 <- replace(q1, q1 == Inf, .Machine$double.xmax)
q1 <- replace(q1, q1 == -Inf, -.Machine$double.xmax)
q2 <- replace(q2, q2 == Inf, .Machine$double.xmax)
q2 <- replace(q2, q2 == -Inf, -.Machine$double.xmax)
lengths <- sapply(list(q1, q2, cov12), length)
if (recycle) {
q1 <- rep(q1, length.out = max(lengths))
q2 <- rep(q2, length.out = max(lengths))
cov12 <- rep(cov12, length.out = max(lengths))
}
else if (diff(range(lengths)) > 0) {
stop("'q1', 'q2', and 'cov12' must be the same length when recycling is disallowed")
}
lower <- as.double(c(0, 0))
infin <- as.integer(c(0, 0))
uppera <- as.double(q1)
upperb <- as.double(q2)
lt <- as.integer(length(q1))
prob <- double(lt)
cov12 <- as.double(cov12)
ans <- .Fortran("PBIVNORM", prob, lower, uppera, upperb,
infin, cov12, lt, PACKAGE = "pbivnorm")[[1]]
return(ans)
}
y1 <- (log(s1/K) + (b1 - v1^(2)/2)*t)/(v1*sqrt(t))
y2 <- (log(s2/X) + (b2 - v2^(2)/2)*t)/(v2*sqrt(t))
if(type == "C"){
price <- s2 * exp((b2-r)*t)*pbinorm(q1 = y1 + rho*v2*sqrt(t) , q2 = y2 + v2*sqrt(t) ,cov12 = rho) -
X*exp(-r*t)*pbinorm(q1 = y1 , q2 = y2 ,cov12 = rho)
}
if(type == "P"){
price <- X*exp(-r*t)*pbinorm(q1 = -y1 , q2 = -y2 ,cov12 = rho)- s2 * exp((b2-r)*t)*
pbinorm(q1 = -y1 - rho*v2*sqrt(t) , q2 = -y2 - v2*sqrt(t) ,cov12 = rho)
}
return(round(price,2))
}
TwoAssetCorrelationOption(52,50,65,70,0.1,0.1,0.1,0.2,0.3,.75,0.5,"C")
